[/Script/GameplayTags.GameplayTagsList]
; Ability Component Events
GameplayTagList=(Tag="SimpleGAS.Events.AbilityComponent.GameplayTagAdded", DevComment="Broadcast when a tag gets added to an ability component")
GameplayTagList=(Tag="SimpleGAS.Events.AbilityComponent.GameplayTagRemoved", DevComment="Broadcast when a tag gets removed from an ability component")

; Ability Events
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityAdded", DevComment="Broadcast when an ability is added on the server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityRemoved", DevComment="Broadcast when an ability is removed on the server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityActivated", DevComment="Broadcast when an ability is activated on the client or server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityEnded", DevComment="Broadcast when an ability is ended on the client or server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityEndedSuccessfully", DevComment="Broadcast when an ability is ended without issues on the client or server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityCancelled", DevComment="Broadcast when an ability is cancelled on the client or server")
GameplayTagList=(Tag="SimpleGAS.Events.Ability.AbilityStateSnapshotTaken", DevComment="Broadcast when a state snapshot is taken on the server")

; Float Attribute Events
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.FloatAttributeAdded", DevComment="Broadcast when a float attribute is added")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.FloatAttributeRemoved", DevComment="Broadcast when a float attribute is removed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.BaseValue", DevComment="Broadcast when the base value of an attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.MaxBaseValue", DevComment="Broadcast when the max base value of an attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.MinBaseValue", DevComment="Broadcast when the min base value of an attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.CurrentValue", DevComment="Broadcast when the current value of an attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.MaxCurrentValue", DevComment="Broadcast when the max current value of an attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.AttributeChanged.MinCurrentValue", DevComment="Broadcast when the min current value of an attribute is changed")

; Struct Attribute Events
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.StructAttributeAdded", DevComment="Broadcast when a struct attribute is added")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.StructAttributeChanged", DevComment="Broadcast when a struct attribute is changed")
GameplayTagList=(Tag="SimpleGAS.Events.Attributes.StructAttributeRemoved", DevComment="Broadcast when a struct attribute is removed")

; Attribute Modifier Events
GameplayTagList=(Tag="SimpleGAS.Events.AttributeModifer.ModifierInitiallyApplied", DevComment="Broadcast when a modifier is initially applied to an ability component")
GameplayTagList=(Tag="SimpleGAS.Events.AttributeModifer.ModifierTicked", DevComment="Broadcast when a duration modifier ticks")
GameplayTagList=(Tag="SimpleGAS.Events.AttributeModifer.ModifierEnded", DevComment="Broadcast when a duration modifier ends")

; Domains
GameplayTagList=(Tag="SimpleGAS.Domains.Ability.Local",DevComment="Domain for local ability events")
GameplayTagList=(Tag="SimpleGAS.Domains.Ability.Authority",DevComment="Domain for server ability events")
GameplayTagList=(Tag="SimpleGAS.Domains.Attribute",DevComment="Domain for attribute changes")